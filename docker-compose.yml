version: '3.8'

services:
  main:
    container_name: main
    environment:
      - APPLICATIONINSIGHTS_CONNECTION_STRING=InstrumentationKey=6a8121ce-cc3c-4512-9766-9ac5111590c7;IngestionEndpoint=https://westeurope-5.in.applicationinsights.azure.com/;LiveEndpoint=https://westeurope.livediagnostics.monitor.azure.com/
      - DB_HOST=192.168.0.123
      - DB_PORT=5432
      - DB_USERNAME=POSTGRES_USER
      - DB_PASSWORD=POSTGRES_PASSWORD
      - DB_NAME=POSTGRES_DB
      - DB_SSL=false
      - REDIS_PORT=6379
      - REDIS_HOST=192.168.0.123
      - REDIS_SSL=false
      - KEY_VAULT_NAME=dziomtestorgkeyvault
      - AZURE_TENANT_ID=4860a3c9-8cae-47bf-8075-44fd1000d768
      - AZURE_CLIENT_ID=19190db6-cee5-4269-b43b-7656e99333c6
      - AZURE_CLIENT_SECRET=<PUT_IT_HERE>

    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
      - 9229:9229
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 192.168.0.123 3000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: npm run start:debug
    networks:
      - webnet
    depends_on:
      - redis
      - postgres

  redis:
    container_name: redis
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet

  postgres:
    container_name: postgres
    image: postgres:14.4-alpine
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: POSTGRES_PASSWORD
      POSTGRES_USER: POSTGRES_USER
      POSTGRES_DB: POSTGRES_DB
      PG_DATA: /var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          " pg_isready --dbname=POSTGRES_DB --username=POSTGRES_USER && psql --username=POSTGRES_USER --list"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 192.168.0.123 8080 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8080:80"

networks:
  webnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/23
          gateway: 192.168.0.123

volumes:
  pgdata:
